1. git tag
특정 커밋을 가리키는 포인터을 의미한다.
태그는 일반 태그와 주석 태그가 존재한다. 일반 태그는 이름만 존재하는 태그/ 주석 태그는 작성자, 날짜 , 메시지 등 메타데이터를 추가할 수 있는 태그이다.


2. Semantic Versioning
정의 : 시멘트 버저닝을 버전 번호를 매기는 일종의 규약, 명세, 규칙이다.

특징
2-1. 버전명은 숫자 세 개와 숫자 사이의 두 개의 점으로 구성되며 자리에 따라 의미가 다르다.
2-2.  2.4.1 (왼쪽 숫자부터 메이저 릴리스, 마이너 릴리스, 패치 릴리스라고 부른다.)
2-3. 신규 API을 공개했을 떄 버전은 1.0.0이다.
2-4. 1.0.1 => 패치=>신규 기능이나 의미있는 변경사항을 의미하지 않는다. 버그 수정이나 약간의 변경
2-5. 1.1.0 => 마이너 릴리스 => 신규 기능 추가, 하위 호환성은 유지된다. 마이너 릴리스 배포 시 배치는 0로 재설정
2-6. 2.0.0 => 메이저 릴리스 => 기능 삭제, 큰 변화가 있을 떄/ 메이저 릴리스 배포시 마이너, 패치는 0로 재설정
2-7. 관행적으로 버전명 앞에 v을 붙이기도 한다.


3. Tag 확인 및 검색
git tag => 현 저장소에 있는 태그를 전부 조회한다.
git tag -l(list) "(와일드 카드)tag name" => *(모든 문자)/ 태그 목록에 있는 특정 태그를 찾는다.


4. git diff tag
git checkout tag => 해당 커밋 태그로 이동한다. 이를 통해서 브랜치 생성하여 작업할 수 있다. 

git diff tag-name tag-name => 커밋 태그들의 변경사항을 비교한다. 


4. 태그 생성
git tag tag-name => 헤드가 가리키고 있는 곳에 태그가 생성된다.


5. 주석 태그 생성
git tag -a tagname => 헤드가 가리키고 있는 곳에 주석 태그가 생성된다.
git show tagname => 주석 태그를 보여준다.




























